(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{114:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return f}));var r=n(0),i=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function p(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?p(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var o=i.a.createContext({}),u=function(e){var t=i.a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},b=function(e){var t=u(e.components);return i.a.createElement(o.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},d=i.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,o=l(e,["components","mdxType","originalType","parentName"]),b=u(n),d=r,f=b["".concat(p,".").concat(d)]||b[d]||s[d]||a;return n?i.a.createElement(f,c(c({ref:t},o),{},{components:n})):i.a.createElement(f,c({ref:t},o))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,p=new Array(a);p[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,p[1]=c;for(var o=2;o<a;o++)p[o]=n[o];return i.a.createElement.apply(null,p)}return i.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},76:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return p})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return u}));var r=n(2),i=n(6),a=(n(0),n(114)),p={id:"usage-cli",title:"CLI Usage",sidebar_label:"CLI"},c={id:"usage-cli",isDocsHomePage:!1,title:"CLI Usage",description:"The CLI tool is used primarily to compile Paperclip files into your target framework.",source:"@site/docs/usage-cli.md",permalink:"/docs/usage-cli",editUrl:"https://github.com/crcn/paperclip/edit/master/packages/paperclip-website/docs/usage-cli.md",sidebar_label:"CLI",sidebar:"docs",previous:{title:"Using Paperclip in React apps",permalink:"/docs/usage-react"},next:{title:"Paperclip Config",permalink:"/docs/configure-paperclip"}},l=[{value:"Installation",id:"installation",children:[]},{value:"Commands",id:"commands",children:[{value:"paperclip init",id:"paperclip-init",children:[]},{value:"paperclip build",id:"paperclip-build",children:[]}]}],o={rightToc:l};function u(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},o,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"The CLI tool is used primarily to compile Paperclip files into your target framework. "),Object(a.b)("h2",{id:"installation"},"Installation"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"npm install paperclip-cli --save-dev")),Object(a.b)("h2",{id:"commands"},"Commands"),Object(a.b)("h3",{id:"paperclip-init"},"paperclip init"),Object(a.b)("p",null,"Initializes Paperclip for a new or existing project. If you're starting a new project, the ",Object(a.b)("inlineCode",{parentName:"p"},"init")," command will all a few questions, then generate project files for you."),Object(a.b)("h3",{id:"paperclip-build"},"paperclip build"),Object(a.b)("p",null,"Generates code based on your ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/configure-paperclip"}),"paperclip config"),". "),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Options")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"write")," - Option to write compiled UI files to disk. Output is otherwise printed in the console log. Currently, files are written to the same directory as the ",Object(a.b)("inlineCode",{parentName:"li"},"*.pc")," files, so be sure to add ",Object(a.b)("inlineCode",{parentName:"li"},"*.pc.*")," to your ",Object(a.b)("inlineCode",{parentName:"li"},".gitignore"),"."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"watch")," - Starts the file watcher & rebuilds UIs whenever they change."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"definition")," - Generate a typed definition file (Specific to TypeScript)")),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Examples")),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-sh"}),"\n# Build all Paperclip files and print to stdout\npaperclip build \n\n# Build Paperclip files & writes them\npaperclip build --write\n\n# Starts watcher & writes them whenever they change\npaperclip build --write --watch\n\n# Start typed definition watcher\npaperclip build --write --definition --watch\n")),Object(a.b)("p",null,"If you're using ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"usage-webpack.md"}),"Webpack"),", then you probably don't need to run ",Object(a.b)("inlineCode",{parentName:"p"},"paperclip build --write")," since the paperclip loader handles that for you. "),Object(a.b)("p",null,"If you're using ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/configure-typescript"}),"TypeScript"),", then you'll probably want to use the ",Object(a.b)("inlineCode",{parentName:"p"},"paperclip build --write --definition --watch")," to generate typed definition files."))}u.isMDXComponent=!0}}]);