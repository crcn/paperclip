<import src="components/Theme/index.pc" as="theme" />
<import src="components/icons/index.pc" as="icons" />
<import src="styles/utils.pc" as="utils" />

<style>
  :root {
    --topbar-background-active-1: var(--vscode-activityBar-foreground, var(--background-selected-1));
    --toolbar-border-color: var(--border-color-1);
  }

  :global(.light) {
     --toolbar-border-color: var(--border-color-1);
     /* --topbar-background-active-1: red; */
     /* --toolbar-border-color: transparent; */
  }
</style>


<!--
  @frame { visible: false }
-->
<div export component as="Zoom" className="zoom">
  <style>
    border-left: 1px solid var(--border-color);
    font-size: 0.8em;
    display: flex;
    align-items: center;

    span {
      user-select: none;
      position: relative;
    }
    button {
      --size: 9px;
      cursor: pointer;
      color: inherit;
      margin-right: 4px;
      line-height: 0;
      display: inline-block;
      @include utils.mask;
      border: none;
      padding:0;
      outline: none;
      &.minus {
        mask-image: url(./minus.svg);
      }
      &.plus {
        mask-image: url(./plus.svg);
      }
    }
  </style>
  <button className="$icons.icon minus" onClick={onMinusClick}></button>
  <button className="$icons.icon plus" onClick={onPlusClick}></button>
  <span>{amount}%</span>
</div>


<!--
  @frame { visible: false }
-->
<button export component as="PaintButton" {onClick?} 
  className="brush">
  <style>
    border: none;
    color: inherit;
    padding: 0;
    background: transparent;
    display: flex;
    height: 100%;
    outline: none;


    i {
      --size: 1em;
      mask-size: 0.95em;
      cursor: pointer;
      mask-image: url(./drop2.svg);
      display: inline-block;

      top: -1px;
      &.active {
        color: var(--topbar-background-active-1); 
      }
    }
  </style>
  <i className="$icons.icon" className:active="active" />
</button>


<!--
  @frame { visible: false }
-->
<button export component as="GridButton" {onClick?} 
  className="grid">
  <style>
    border: none;
    color: inherit;
    outline: none;
    padding: 0;

    background: transparent;
    display: flex;
    margin-right: 4px;
    height: 100%;

    i {
      --size: 0.9em;
      position: relative;
      top: 1px;
      /* mask-size: 0.93em; */
      cursor: pointer;
      mask-image: url(./grid4.svg);
      display: inline-block;
      &.active {
        color: var(--topbar-background-active-1); 
      }
    }
  </style>
  <i className="$icons.icon" className:active="active" />
</button>

<!--
  @frame { visible: false }
-->
<button export component as="MagnifyButton" {onClick?} 
  className="grid">
  <style>
    border: none;
    color: inherit;
    outline: none;
    padding: 0;

    background: transparent;
    display: flex;

    height: 100%;

    i {
      --size: 1em;
      position: relative;
      top: 1px;
      /* mask-size: 0.93em; */
      cursor: pointer;
      mask-image: url(./magnify.svg);
      display: inline-block;
      &.active {
        color: var(--topbar-background-active-1); 
      }
    }
  </style>
  <i className="$icons.icon" className:active="active" />
</button>


<!--
  @frame { visible: false }
-->
<div export component as="SearchInput">
  <style>
    position: relative;
    &:before {
      position: absolute;
      top: 50%;
      color: var(--background-active-1);
      left: 22px;
      transform: translate(-100%, -50%);
      --size: 1em;
      @include utils.mask;
      mask-image: url(./magnify.svg);
    }
  </style>
  <input type="text" ref={inputRef} {onChange} {onBlur?} {defaultValue?}>
    <style>
      background: transparent;
      border: 1px solid  var(--background-active-1);
      border-radius: 2px;
      box-sizing: border-box;
      padding: 2px 8px;
      padding-left: 16px;
      color:  var(--background-selected-1);
      outline: none;
      width: 100px;
      font-size: 0.8em;
    </style>
  </input>
</div>

<!--
  @frame { visible: false }
-->
<button export component as="CollapseButton" {onClick} className:active="active">
  <style>
    border: none;
    color: inherit;
    padding: 0;
    outline: none;

    background: transparent;
    display: flex;
    margin-right: 4px;
    height: 100%;

    i {
      --size: 9px;
      position: relative;
      top: 1px;
      mask-size: var(--size);
      cursor: pointer;
      mask-image: url(./minimize-3.svg);
      display: inline-block;
      &.active {
        color: var(--topbar-background-active-1); 
      }
    }
  </style>
  <i className="$icons.icon" className:active="active" />
</button>


<!--
  @frame { visible: false }
-->
<div export component as="Controls" className="controls">
  <style>
    padding:4px 14px;
    display: flex;
    align-items: center;
    :self(& > *) {
      border-left: 1px solid rgb(110, 110, 110);
      padding-left: 6px;
      padding-right: 6px;

      &:first-child {
        border-left: none;
        margin-left: 0px;

      }
    }
  </style>
  {children}
</div>


<!--
  @frame { visible: false }
-->
<div export component as="Container" className="toolbar {className?}" className:gridMode="grid-mode">
  <style>
    --border-color: var(--vscode-editorGroup-border, #777);
    /* --active-background: var(--vscode-activityBar-foreground, var(--active-background)); */
    background: var(--vscode-breadcrumb-background, var(--background-2));
    color: var(--vscode-activityBar-inactiveForeground, var(--color-negate-1));
    border-bottom: 1px solid var(--toolbar-border-color);
    height: 21px;
    flex-shrink: 0;
    flex-grow: 0;
    display: flex;
    box-sizing: border-box;

    :self(.grid-mode) { 
      > :last-child {
        visibility: hidden;
      }
    }
  </style>
  {children}
</div>


<!--
  @frame { visible: false }
-->
<button export component as="PopOutButton" {onClick}>
  <style>
    width: 10px;
    height: 10px;
    background: rgb(179, 179, 179);
    margin-right: 4px;
    border: none;
    outline: none;
    cursor: pointer;
    &:active {
      outline: none;
    }
  </style>
</button>


<!--
  @frame { visible: false }
-->
<div export component as="ReadOnlyBadge">
  <style>
    display: flex;
    align-content: center;
    align-items: center;
    margin-right: 4px;
    box-sizing: border-box;
    flex-shrink: 0;
  </style>
<div>
  <style>
    text-transform: uppercase;
    font-size: 0.7em;
    background: rgb(255, 255, 83);
    border-radius: 4px;
    color: rgb(117, 104, 30);
    box-sizing: border-box;
    flex-shrink: 0;
    padding: 2px 10px;
    font-weight: 600;
  </style>
    Read-only
  </div>
</div>


<!--
  @frame { visible: false }
-->
<Container export component as="Preview" {gridMode?} className:light="light" {className?}>
 
  <Controls>
    <MagnifyButton />
    <Zoom amount="100" />
  </Controls>
  <Spacer />
    <Controls right>
      <PopOutButton />
      <CollapseButton />
    </Controls>
    <ReadOnlyBadge />
</Container>


  
  
<!--
  @frame { visible: false }
-->
<div export component as="Spacer">
    <style>
      width: 100%;
    </style>
  </div>


<!--
  @frame { title: "Preview 1", width: 1024, height: 48, x: 68, y: -182 }
-->

<Preview className="$theme.font-default" />



<!--
  @frame { title: "Search Input", width: 1024, height: 48, x: 58, y: -416 }
-->


<Container className="light $theme.font-default">
 
  <Controls>
    <SearchInput />
    <Zoom amount="100" />
  </Controls>
  <Spacer />
    <Controls right>
      <PopOutButton />
      <CollapseButton />
    </Controls>
    <ReadOnlyBadge />
</Container>



<!--
  @frame { title: "Preview 1", width: 1024, height: 48, x: 66, y: -294 }
-->

<Preview className="$theme.font-default" light />

