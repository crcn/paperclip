<import src="components/Theme/index.pc" as="theme" />
<import src="components/icons/index.pc" as="icons" />
<import src="styles/utils.pc" as="utils" />

<style>
  :root {
    --topbar-background-active-1: var(--vscode-activityBar-foreground, var(--background-selected-1));
    --toolbar-border-color: var(--border-color-1);
  }

  :global(.light) {
     --toolbar-border-color: var(--border-color-1);
     /* --topbar-background-active-1: red; */
     /* --toolbar-border-color: transparent; */
  }
</style>

<div export component as="Zoom" className="zoom">
  <style>
    border-left: 1px solid var(--border-color);
    font-size: 0.8em;
    display: flex;
    align-items: center;

    span {
      user-select: none;
      position: relative;
    }
    button {
      --size: 9px;
      cursor: pointer;
      color: inherit;
      margin-right: 4px;
      line-height: 0;
      display: inline-block;
      @include utils.mask;
      border: none;
      padding:0;
      outline: none;
      &.minus {
        mask-image: url(./minus.svg);
      }
      &.plus {
        mask-image: url(./plus.svg);
      }
    }
  </style>
  <button className="$icons.icon minus" onClick={onMinusClick}></button>
  <button className="$icons.icon plus" onClick={onPlusClick}></button>
  <span>{amount}%</span>
</div>

<button export component as="PaintButton" {onClick?} 
  className="brush">
  <style>
    border: none;
    color: inherit;
    padding: 0;
    background: transparent;
    display: flex;
    height: 100%;
    outline: none;


    i {
      --size: 1em;
      mask-size: 0.95em;
      cursor: pointer;
      mask-image: url(./drop2.svg);
      display: inline-block;

      top: -1px;
      &.active {
        color: var(--topbar-background-active-1); 
      }
    }
  </style>
  <i className="$icons.icon" className:active="active" />
</button>

<button export component as="GridButton" {onClick?} 
  className="grid">
  <style>
    border: none;
    color: inherit;
    outline: none;
    padding: 0;

    background: transparent;
    display: flex;
    margin-right: 4px;
    height: 100%;

    i {
      --size: 0.9em;
      position: relative;
      top: 1px;
      /* mask-size: 0.93em; */
      cursor: pointer;
      mask-image: url(./grid4.svg);
      display: inline-block;
      &.active {
        color: var(--topbar-background-active-1); 
      }
    }
  </style>
  <i className="$icons.icon" className:active="active" />
</button>

<button export component as="CollapseButton" {onClick} className:active="active">
  <style>
    border: none;
    color: inherit;
    padding: 0;
    outline: none;

    background: transparent;
    display: flex;
    margin-right: 4px;
    height: 100%;

    i {
      --size: 9px;
      position: relative;
      top: 1px;
      mask-size: var(--size);
      cursor: pointer;
      mask-image: url(./minimize-3.svg);
      display: inline-block;
      &.active {
        color: var(--topbar-background-active-1); 
      }
    }
  </style>
  <i className="$icons.icon" className:active="active" />
</button>

<div export component as="Controls" className:right="right" className="controls">
  <style>
    padding:4px 14px;
    display: flex;
    align-items: center;
    :self(& > *) {
      border-left: 1px solid rgb(110, 110, 110);
      padding-left: 6px;
      padding-right: 6px;

      &:first-child {
        border-left: none;
        padding-left: 0px;

      }
    }
    :self(.right) {
      float: right;
    }
  </style>
  {children}
</div>

<div export component as="Container" className="toolbar {className?}" className:gridMode="grid-mode">
  <style>
    --border-color: var(--vscode-editorGroup-border, #777);
    /* --active-background: var(--vscode-activityBar-foreground, var(--active-background)); */
    background: var(--vscode-breadcrumb-background, var(--background-2));
    color: var(--vscode-activityBar-inactiveForeground, var(--color-negate-1));
    border-bottom: 1px solid var(--toolbar-border-color);
    height: 21px;
    flex-shrink: 0;
    flex-grow: 0;
    display: flex;
    justify-content: space-between;
    :self(.grid-mode) { 
      > :last-child {
        visibility: hidden;
      }
    }
  </style>
  {children}
</div>

<button export component as="PopOutButton" {onClick}>
  <style>
    width: 10px;
    height: 10px;
    background: rgb(179, 179, 179);
    margin-right: 4px;
    border: none;
    outline: none;
    cursor: pointer;
    &:active {
      outline: none;
    }
  </style>
</button>

<Container export component as="Preview" {gridMode?} className:light="light">
 
  <Controls>
    <PaintButton />
    <Zoom amount="100" />
  </Controls>
   <Controls right>
    <PopOutButton />
    <CollapseButton />
  </Controls>
</Container>

<div className="$theme.font-default">
  <Preview />
</div>

