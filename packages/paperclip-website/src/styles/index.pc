<import src="./colors.pc">
<import src="./typography.pc" as="typography">
<import src="./layout.pc" as="layout">
<import src="./button.pc" as="button">
<import src="./icons/icons.pc" as="icons">

<!-- You should be able to <i>see</i> what you're building in
                    realtime, and that's what Paperclip provides - tooling to
                    build your UIs <i>visually</i>. No more need to jump back
                    and forth between the browser and code.

                    -->
<style>
  @export {
    ._emoji {}
  }
  @mixin mobile {
    @media screen and (max-width: 900px) {
      @content;
    }
  }
  @mixin tiny {
    @media screen and (max-width: 430px) {
      @content;
    }
  }
  @mixin section-icon {
    margin-right: 8px;
    flex-shrink: 0;
    font-size: 1.7em;
    position: relative;
    /* top: 2px; */
  }
  ._home {
    background: rgb(245, 245, 245);
    line-height: 1.6em;
    * { 
      box-sizing: border-box;
    }
  }
  ._header {
    /* background: rgb(58, 60, 65); */
    background: rgb(48, 50, 56);
    /* background: rgb(68, 70, 77); */
    /* color: white; */
  }

  ._mini-cta-link {
    display: flex;
    margin-top: 10px;
    opacity: 0.5;
    align-items: center;
    color: inherit;
    text-decoration: none;


    ._mini-cta-icon {
      font-size: 0.9em;
      margin-left: 6px;
    }
  }
  ._main {
    padding-top: 70px;
    box-sizing: border-box;
    overflow: hidden;
    position: relative;
    height: 600px;

    ._blurb {
        margin-top: 100px;
        width: 50%;
        flex-shrink:0;
        margin-right: 30px;
      ._title {
        color: rgba(255, 255, 255, 0.9);

        /* filter: drop-shadow(5px 5px 2px rgba(0, 0, 0, 0.164)); */
        @include typography.text-secondary;
        font-size: 1.58em;
        line-height: 1.3em;
        /* white-space: nowrap; */
        margin-bottom: var(--gap-5);
        font-weight: 600;
        letter-spacing: 0.04em;
      }
      ._subtext {
        color: rgba(255, 255, 255, 0.9);
        /* filter: drop-shadow(0px 0px 1px rgb(0, 0, 0)); */
        font-weight: 500;
        letter-spacing: 0.075em;
        line-height: 1.8em;
        /* padding-right: 20px; */

        ._emoji {
          color: rgba(255, 255, 255, 1);
        }
      }

      @include mobile {
        margin-top: 0;
        margin-bottom: 30px;
        text-align: center;
        width: 100%;
        margin-right: 0;
      }
    }

    ._cta {
      margin-top: 15px;
      :global(a) { 
        margin-right: 15px;
        margin-top: 15px;
        &:first-child {
          margin-left: 0;
        }
        @include tiny {
          width: 100%;
          box-sizing: border-box;
          margin-right: 0;
        }
      }
    }

    ._preview {
      position: relative;
      /* left: calc(100% - 400px); */
      width: 100%;
      /* box-shadow: -4px 1px 4px 4px rgb(153, 153, 153); */
      :global(img) {
        /* border-radius: 4px; */
        /* box-shadow: -2px -2px 6px 0px rgba(0, 0, 0, 0.247); */
        /* border: 1px solid rgba(99, 99, 99, 0.404); */
        position: absolute;
        width: auto;
        max-width: 1024px;
        @include mobile {      
          position: absolute;
          width: calc(100% + 80px);
          left: -40px;
        }
      }

      /* @include mobile {
        :global(img) {          
          position: absolute;
          width: calc(100% + 80px);
          left: -40px;
        }
      } */
    }
  }
  ._highlight {
    color: var(--color-green-neon-light);
    &--darker {
      color: var(--color-green-army);
    }
    &--bold {
      font-weight: 600;
    }
    font-weight: 500;
    &--noBreak {
      white-space: nowrap;
    }
  }
  ._summary {
    border-top: 1px solid rgb(226, 226, 226);
    @include layout.py-6;
    ._title {
      @include typography.text-secondary;
      font-size: 1.2em;
      font-weight: 500;
      margin-bottom: var(--gap-4);
    }
    ._text {

    }
  }

  ._main-features {
    border-top: 1px solid rgb(226, 226, 226);
    border-bottom: 1px solid rgb(226, 226, 226);
    ._item {
      @include layout.py-6;
      display: flex;
      flex-direction: column;
      ._heading {
        display: flex;
        ._icon {
          @include section-icon;
        }
        ._info {
          display: flex;
          flex-direction: column;
          ._title {
            @include typography.text-secondary;
            font-size: 1.2em;
            display: flex;
            font-weight: 500;
            margin-bottom: var(--gap-4);
          }
          ._details {
            margin-bottom: 2em;
          }
        }
      }
      ._example {
        font-size: 14px;
        :global(.prism-code) {
          max-height: 400px;
        }
        :global(.prism-code > div) {
          /* height: 400px; */
        }
      }
      &:first-child {
        border-right: 1px solid rgb(226, 226, 226);
        padding-right: 30px;

        @include mobile {
          padding-right: 0px;
          border-right: 0px;
        }
      }
      &:last-child {
        border-left: 1px solid rgb(255, 255, 255);
        padding-left: 30px;
        @include mobile {
          padding-top: 0px;
          padding-left: 0px;
          border-left: 0;
        }
      }
    }
    ._code-preview {
      width: 100%;
      height: 100%;
      min-height: 200px;
      background: rgb(221, 221, 221);
      border-radius: 6px;
      
    }
  }

  ._various-features {
    border-top: 1px solid rgb(255, 255, 255);
    border-bottom: 1px solid rgb(226, 226, 226);
    /* text-align: right; */

    ._item  {
      @include layout.py-6;
      display: flex;
      margin: 0px auto;
      /* background: blue; */
      margin-left: 10px;
      &:first-child {
        margin-left: 0;
      }

      ._info {
        width: 100%;
      }

      &:last-child {
        /* padding-left: 30px; */
      }
      ._icon {
        @include section-icon;
      }
      ._title {

        @include typography.text-secondary;
        font-size: 18px;
        font-weight: 500;
        align-items: flex-start;
        margin-bottom: 20px;
      }

      ._details {

      }

      @include mobile {
        margin-left: 0;
      }
    }
  }

  ._big-feature {
    border-bottom: 1px solid rgb(226, 226, 226);
    border-top: 1px solid rgb(255, 255, 255);
    
    ._item {
      display: flex;
      ._icon {
        @include section-icon;
        visibility: hidden;
      }

      ._info {
        /* margin-left: 45px; */
        /* margin-right: 40px; */
      }
    }
    ._title {
      @include typography.text-secondary;
      font-size: 1.3em;
        margin-bottom: var(--gap-4);
    }
    ._details {
    }
    ._preview {
      margin-left: 15px;
      @include mobile {
        margin-left: 0;
      }
      :global(img) {
        border-radius: 4px;
        /* border: 1px solid rgba(255, 255, 255, 0.363); */
        /* box-shadow: 4px 4px 4px 4px #F60; */
        /* filter: drop-shadow(0px 0px 1px rgba(0, 0, 0, 0.226)); */
        @include mobile {
          width: 100%;
        }
      }
    }
  }
  
</style>


<span export component as="Highlight" className="_highlight" 
  className:noBreak="_highlight--noBreak"
  className:darker="_highlight--darker"
  className:bold="_highlight--bold">
  {children}
</span>

<div export component as="Home" className="_home $typography.text-default">
  {children}
</div>

<layout.Container export component as="Header" className="$_header $_main">
  <layout.Row>
    <div className="_blurb">
      <div className="_title">
        {title}
      </div>
      <div className="_subtext">
        {description}
      </div>
      <div className="_cta">
        {cta}
      </div>
    </div>
    <div className="_preview">
      {preview}
    </div>
  </layout.Row>
</layout.Container>

<div component as="CodePreview" className="_code-preview">
</div>

<div export component as="Summary" className="_summary $layout._row">
  <div className="$layout._col12">
    <div className="_title">
      {title}
    </div>
    <div className="_text">
      {text}
    </div>
  </div>
</div>


<div export component as="MainFeatures" className="_main-features $layout._row">
  {children}
</div>

<div export component as="MainFeatureItem" className="_item $layout._col $layout._col6">
  <div className="_heading">
    <icons.Icon name={iconName} className="$_icon" />
    <div className="_info">
      <div className="_title">
        <span>{title}</span>
      </div>
      <div className="_details">{description}</div>
    </div>
  </div>
  <div className="_example">
    {example}
  </div>
</div>


<div export component as="VariousFeatures" className="_various-features $layout._row">
  {children}
</div>

<div export component as="VariousFeatureItem" className="_item  $layout._col $layout._col3">
  <icons.Icon name={iconName} className="$_icon" />
  <div className="_info">
    <div className="_title">
      <span>{title}</span>
    </div>
    <div className="_details">
      {description}
    </div>
  </div>
</div>

<div export component as="BigFeature" className="_big-feature $layout._section $layout._row">
  <div className="_item $layout._col $layout._col3">
    <icons.Icon name="grow" className="$_icon" />
    <div clasName="_info">
      <div className="_title">
        {title}
      </div>
      <div className="_details">
        {description}
      </div>
      <a className="_mini-cta-link" href={ctaHref?}>
        {ctaText} <icons.Icon name="chevron-right" className="$_mini-cta-icon" />
      </a>
    </div>
  </div>
  <div className="_preview">
    {preview}
  </div>
</div>

<Home>
  <Header 
    title={<fragment>Use plain HTML & CSS to build web applications in <Highlight noBreak>record time.</Highlight></fragment>}
    description={<fragment>With tooling for <Highlight>realtime previews</Highlight> & <Highlight>automatic visual regresion testing</Highlight>, you can build UIs in no time using the language you already know.</fragment>}
    cta={<fragment>
      <button.Anchor className="$typography.semi-bold" strong>Get started</button.Anchor>
      <button.Anchor secondary className="$typography.semi-bold">Check out on GitHub</button.Anchor>
    </fragment>}
    preview={<img src="../../static/img/vscode-screenshot.png">}
  />

  <Summary title="Web development is slow" text="You shouldn't have to be bogged down by developer tooling in order to make simple HTML & CSS changes. And you should be able to make style changes confidently without needing to worry about introducing bugs. " />

  <MainFeatures>
    <MainFeatureItem
      iconName="shapes"
      title="A minimalistic UI language"
      description="Paperclip just covers the visuals. No logic -  just HTML, CSS, and basic component."
      example={<CodePreview />}
    />
    <MainFeatureItem
      iconName="reactjs"
      title="Import directly into React code"
      description="Paperclip documents compile to plain code that you can import directly into your code."
      example={<CodePreview />}
    />
  </MainFeatures>

  <VariousFeatures>    
    <VariousFeatureItem 
      iconName="chaotic-1"
      title="Scoped styles"
      description="Styles are only applied to the document they're in, so no more leaky CSS."
    /> 
    <VariousFeatureItem 
      iconName="link"
      title="Strongly typed"
      description="UIs compile to strongly typed code, so worry less about breaking changes."
    />
    <VariousFeatureItem 
      iconName="grow"
      title="Incrementally adoptable"
      description="Paperclip compliments your existing codebase, so use it as you go."
    />
  </VariousFeatures>

  <BigFeature 
    title="IDE integration"
    description="Realtime previews, intellisense, and other tools make up the VS Code extension to help you build UIs faster."
    preview={<img src="./assets/realtime-editing-2.gif">}
    ctaText="View the extension"
  />

  <BigFeature 
    title="Never miss a CSS Bug"
    description="Use the visual regression tool to catch every visual state of your UI. No more broken window CSS. 🎉"
    preview={<img src="./assets/realtime-editing-2.gif">}
    ctaText="View the API"
  />

</Home>